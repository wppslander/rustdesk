name: Build RustDesk Windows
on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-2022
    env:
      VCPKG_ROOT: ${{ runner.temp }}\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows-static
      CMAKE_TOOLCHAIN_FILE: ${{ runner.temp }}\vcpkg\scripts\buildsystems\vcpkg.cmake
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install LLVM/Clang
        run: choco install llvm --yes

      # (Opcional) Cache do vcpkg pra acelerar re-builds
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_ROOT }}\installed
            C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: vcpkg-${{ runner.os }}-${{ hashFiles('.github/workflows/vcpkg-packages.txt') }}

      - name: Setup vcpkg (manual)
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg $env:VCPKG_ROOT
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat"
          & "$env:VCPKG_ROOT\vcpkg.exe" integrate install

      - name: Install deps (libyuv, libvpx, openssl, sdl2, opus, libpng)
        shell: pwsh
        run: |
          Get-Content ".github/workflows/vcpkg-packages.txt" | ForEach-Object {
            & "$env:VCPKG_ROOT\vcpkg.exe" install $_
          }

      - name: Build (release)
        env:
          RUSTFLAGS: -C target-feature=+crt-static
        run: cargo build --release -vv

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-win
          path: target\release\*.exe
