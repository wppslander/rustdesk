name: Build RustDesk (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  windows:
    runs-on: windows-2022  # Runner já vem com VS 2022/MSVC
    env:
      VCPKG_ROOT: C:\dev\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows-static

    steps:
      - name: Checkout (com submódulos)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          lfs: true

      - name: Instalar LLVM/Clang (sem winget)
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "18"    # Ajuste p/ 17–20 se precisar
      - name: Exportar LIBCLANG_PATH
        shell: pwsh
        run: echo "LIBCLANG_PATH=${{ env.LLVM_PATH }}\bin" >> $env:GITHUB_ENV

      - name: Habilitar long paths do Git
        shell: pwsh
        run: git config --global core.longpaths true

      - name: vcpkg (clone + bootstrap)
        shell: pwsh
        run: |
          if (-not (Test-Path "${env:VCPKG_ROOT}\vcpkg.exe")) {
            git clone https://github.com/microsoft/vcpkg "${env:VCPKG_ROOT}"
            & "${env:VCPKG_ROOT}\bootstrap-vcpkg.bat"
          }
          & "${env:VCPKG_ROOT}\vcpkg.exe" version

      - name: Instalar deps nativas via vcpkg
        shell: pwsh
        run: |
          & "${env:VCPKG_ROOT}\vcpkg.exe" install

      - name: Garantir submódulos (hbb_common etc.)
        shell: pwsh
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
          if (-not (Test-Path ".\libs\hbb_common\Cargo.toml")) { throw "Submódulo libs\hbb_common ausente" }

      - name: Toolchain Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      - name: Build release (verbose)
        shell: pwsh
        run: cargo build --release -vv

      - name: Artefatos (.exe/.pdb)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows
          path: |
            target\release\*.exe
            target\release\*.pdb
          if-no-files-found: warn
